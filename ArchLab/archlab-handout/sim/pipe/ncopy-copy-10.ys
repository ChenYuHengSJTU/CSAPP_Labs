#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	andq %rdx,%rdx		# len <= 0?
	jle Done		# if so, goto Done:
	addq %rdx, %rbx
	iaddq $-4, %rbx
	jle OneByOne

Loop:	
	mrmovq (%rdi), %r10	# read val from src...
	
	mrmovq 8(%rdi), %r9 
	
	mrmovq 16(%rdi), %r8

	mrmovq 24(%rdi), %r14 

	iaddq $32, %rdi

	rmmovq %r10, (%rsi)	# ...and store it to dst

	andq %r10, %r10		# val <= 0?
	jle Next1		# if so, goto Npos:
	
	iaddq $1, %rax
Next1:
	rmmovq %r9, 8(%rsi)
	#cmovge %r9, 8(%rsi)
	andq %r9, %r9		# val <= 0?
	jle Next2		# if so, goto Npos:
	
	iaddq $1, %rax
Next2:
	rmmovq %r8, 16(%rsi)
	andq %r8, %r8	# val <= 0?
	jle Next3		# if so, goto Npos:
	
	iaddq $1, %rax
Next3:
	rmmovq %r14, 24(%rsi) 
	andq %r14, %r14		# val <= 0?
	jle Npos	# if so, goto Npos:
	
	iaddq $1, %rax

Npos:	
	iaddq $32, %rsi
	iaddq $-4, %rdx
	iaddq $-4, %rbx
	jg Loop			# if so, goto Loop:

OneByOne:
	mrmovq (%rdi), %r10	# read val from src...
	iaddq $8, %rdi		# src++
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos1		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos1:
	iaddq $8, %rsi		# dst++
	iaddq $-1, %rdx		# len--
	jg OneByOne			# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
